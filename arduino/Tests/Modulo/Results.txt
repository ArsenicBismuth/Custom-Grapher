[0-100] dividend [1-12] divisor
divisor	t_alt	t_ardu

0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
1       7600    6856
0101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101
0101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101
2       6572    6852
0120120120120120120120120120120120120120120120120120120120120120120120120120120120120120120120120120
0120120120120120120120120120120120120120120120120120120120120120120120120120120120120120120120120120
3       6212    6852
0123012301230123012301230123012301230123012301230123012301230123012301230123012301230123012301230123
0123012301230123012301230123012301230123012301230123012301230123012301230123012301230123012301230123
4       6020    6852
0123401234012340123401234012340123401234012340123401234012340123401234012340123401234012340123401234
0123401234012340123401234012340123401234012340123401234012340123401234012340123401234012340123401234
5       5912    6852
0123450123450123450123450123450123450123450123450123450123450123450123450123450123450123450123450123
0123450123450123450123450123450123450123450123450123450123450123450123450123450123450123450123450123
6       5832    6852
0123456012345601234560123456012345601234560123456012345601234560123456012345601234560123456012345601
0123456012345601234560123456012345601234560123456012345601234560123456012345601234560123456012345601
7       5780    6852
0123456701234567012345670123456701234567012345670123456701234567012345670123456701234567012345670123
0123456701234567012345670123456701234567012345670123456701234567012345670123456701234567012345670123
8       5744    6852
0123456780123456780123456780123456780123456780123456780123456780123456780123456780123456780123456780
0123456780123456780123456780123456780123456780123456780123456780123456780123456780123456780123456780
9       5716    6848
0123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789
0123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789
10      5692    6840
0123456789100123456789100123456789100123456789100123456789100123456789100123456789100123456789100123456789100
0123456789100123456789100123456789100123456789100123456789100123456789100123456789100123456789100123456789100
11      6068    7236
01234567891011012345678910110123456789101101234567891011012345678910110123456789101101234567891011012345678910110123
01234567891011012345678910110123456789101101234567891011012345678910110123456789101101234567891011012345678910110123
12      6356    7536


Removing the print commands gives termendous time difference on divisor > 6, ideal for normal-ordered filter and downsampling

[0-300] dividend [8-64] divisor
divisor	t_alt	t_ardu	percent_duration

1       20156   4316    367.01
2       10208   4312    136.73
3       6880    4308    59.70
4       5220    4304    21.28
5       4224    4296    -1.68
6       3556    4292    -17.15
7       3084    4296    -28.21
8       2728    4292    -36.44
9       2456    4288    -42.72
10      2232    4288    -47.95
11      2052    4284    -52.10
12      1900    4284    -55.65
13      1772    4280    -58.60
14      1664    4280    -61.12
15      1560    4280    -63.55
16      1488    4280    -65.23
17      1408    4280    -67.10
18      1352    4280    -68.41
19      1284    4280    -70.00
20      1232    4284    -71.24
21      1184    4276    -72.31
22      1144    4276    -73.25
23      1104    4272    -74.16
24      1068    4280    -75.05
25      1032    4280    -75.89
26      1004    4272    -76.50
27      976     4272    -77.15
28      952     4272    -77.72
29      928     4272    -78.28
30      904     4272    -78.84
31      884     4272    -79.31
32      856     4276    -79.98
33      828     4276    -80.64
34      828     4268    -80.60
35      808     4272    -81.09
36      792     4272    -81.46
37      776     4272    -81.84
38      764     4268    -82.10
39      748     4276    -82.51
40      736     4272    -82.77
41      724     4268    -83.04
42      716     4264    -83.21
43      696     4272    -83.71
44      692     4268    -83.79
45      684     4268    -83.97
46      676     4264    -84.15
47      660     4264    -84.52
48      656     4268    -84.63
49      648     4264    -84.80
50      628     4272    -85.30
51      632     4264    -85.18
52      624     4264    -85.37
53      612     4272    -85.67
54      612     4264    -85.65
55      604     4264    -85.83
56      592     4272    -86.14
57      592     4260    -86.10
58      588     4260    -86.20
59      572     4260    -86.57
60      572     4260    -86.57
61      560     4268    -86.88
62      556     4264    -86.96
63      556     4264    -86.96
64      548     4260    -87.14

Combining them both in a function surely will give way better result.
Turns out the result is pretty mixed based on compiler behavior.

Below is custom modulo, alone
32      992
33      964
34      948
35      928
36      908
37      900
38      884
39      872
40      860
41      848
42      836
43      816
44      808
45      808
46      796
47      788
48      776
49      768
50      760
51      752
52      748
53      740
54      732
55      728
56      720
57      712
58      708
59      700
60      696
61      688
62      684
63      680
64      676

Below is default modulo, alone
1       4316
2       4336
3       4336
4       4332
5       4328
6       4324
7       4320
8       4320
9       4320
10      4320
11      4320
12      4316
13      4312
14      4316
15      4312
16      4320
17      4312
18      4312
19      4312
20      4308
21      4308
22      4308
23      4304
24      4304
25      4312
26      4304
27      4312
28      4304
29      4300
30      4304
31      4304
32      4300
33      4300
34      4300
35      4300
36      4304
37      4304
38      4308
39      4300
40      4308
41      4296
42      4300
43      4296
44      4300
45      4296
46      4296
47      4296
48      4296
49      4296
50      4296
51      4300
52      4296
53      4304
54      4296
55      4300
56      4296
57      4296
58      4292
59      4296
60      4292
61      4296
62      4296
63      4292
64      4296

Below, default left, custom right. Very different.
		def		cust
1       136     4484    -96.97
2       152     4476    -96.60
3       152     4476    -96.60
4       152     4464    -96.59
5       152     4320    -96.48
6       148     3664    -95.96
7       152     3184    -95.23
8       148     2832    -94.77
9       152     2548    -94.03
10      152     2328    -93.47
11      156     2148    -92.74
12      152     1996    -92.38
13      144     1868    -92.29
14      156     1756    -91.12
15      152     1668    -90.89
16      152     1584    -90.40
17      156     1508    -89.66
18      152     1448    -89.50
19      156     1384    -88.73
20      152     1328    -88.55
21      152     1288    -88.20
22      156     1240    -87.42
23      152     1200    -87.33
24      152     1168    -86.99
25      152     1132    -86.57
26      148     1104    -86.59
27      156     1076    -85.50
28      156     1048    -85.11
29      148     1024    -85.55
30      152     1000    -84.80
31      152     980     -84.49
32      152     960     -84.17
33      156     940     -83.40
34      156     916     -82.97
35      152     908     -83.26
36      148     892     -83.41
37      152     876     -82.65
38      152     860     -82.33
39      152     848     -82.08
40      160     828     -80.68
41      152     824     -81.55
42      152     812     -81.28
43      152     800     -81.00
44      152     792     -80.81
45      152     780     -80.51
46      152     772     -80.31
47      152     764     -80.10
48      152     748     -79.68
49      152     744     -79.57
50      152     736     -79.35
51      152     728     -79.12
52      160     716     -77.65
53      152     716     -78.77
54      152     708     -78.53
55      160     696     -77.01
56      148     696     -78.74
57      152     688     -77.91
58      156     676     -76.92
59      152     676     -77.51
60      152     668     -77.25
61      156     660     -76.36
62      148     664     -77.71
63      152     648     -76.54
64      152     652     -76.69

So, while the default modulo is indeed faster, its speeds fluctate. While custom function consistent
All in all, must be tested in the program directly.